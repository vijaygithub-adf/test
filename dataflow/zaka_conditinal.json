{
	"name": "zaka_conditinal",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_input",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_output",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_output",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\tempno as string,\n\t\tename as string,\n\t\tjob as string,\n\t\thiredate as string,\n\t\tsal as string,\n\t\tdeptno as string,\n\t\tDepartment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 split(Department=='IT',\n\tDepartment=='Payroll',\n\tdisjoint: false) ~> ConditionalSplit1@(Deptname1, Deptname2, Deault)\nConditionalSplit1@Deptname1 derive(Newcol = concat(ename,job)) ~> DerivedColumn1\nModifyColumns1 select(mapColumn(\n\t\tempno,\n\t\tename,\n\t\tjob,\n\t\thiredate,\n\t\tsal,\n\t\tdeptno,\n\t\tDepartment,\n\t\tNewcol\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn1 derive(job = lower(job)) ~> ModifyColumns1\nConditionalSplit1@Deault select(mapColumn(\n\t\tempno,\n\t\tename,\n\t\tjob,\n\t\thiredate,\n\t\tsal,\n\t\tdeptno,\n\t\tDepartment\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 sink(input(\n\t\torderId as string,\n\t\torderTotal as string,\n\t\titemName as string,\n\t\titemQty as string,\n\t\tname as string,\n\t\tlocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['condition1.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nConditionalSplit1@Deptname2 sink(input(\n\t\torderId as string,\n\t\torderTotal as string,\n\t\titemName as string,\n\t\titemQty as string,\n\t\tname as string,\n\t\tlocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['conditin2.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nSelect2 sink(input(\n\t\torderId as string,\n\t\torderTotal as string,\n\t\titemName as string,\n\t\titemQty as string,\n\t\tname as string,\n\t\tlocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['condition3.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3"
		}
	}
}